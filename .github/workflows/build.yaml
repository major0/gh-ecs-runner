name: Docker Build

on:
  push:
    branch: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - id: login-ghcr
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - id: runner-metadata
      run: |
        : 'Finding latest GitHub Runner version'
        version="$(curl -s 'https://api.github.com/repos/actions/runner/releases/latest' | jq -r .tag_name | tr -d 'v')"
        printf 'version=%s\n' "${version}" >> "${GITHUB_OUTPUT}"

    - id: docker-metadata
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/major0/gh-ecs-runner
        tags: |
          type=semver,pattern={{version}},value=${{ steps.runner-metadata.outputs.version }}
        labels: |
          org.opencontainers.image.title=Containerized GitHub Runner
          org.opencontainers.image.vendor=GitHub
          org.opencontainers.image.version=latest
          org.opencontainers.image.licenses=MIT
          org.opencontainers.image.description=
          org.opencontainers.image.authors=Mark Ferrell
          org.opencontainers.image.source=https://github.com/major0/gh-ecs-runner.git
          org.opencontainers.image.url=https://github.com/major0/gh-ecs-runner
          org.opencontainers.image.base.name=docker.com/library/ubuntu
          org.opencontainers.image.base.digest=sha256:8ae9bafbb64f63a50caab98fd3a5e37b3eb837a3e0780b78e5218e63193961f9

    - id: build-push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ steps.docker-metadata.outputs.tags }}
        labels: ${{ steps.docker-metadata.outputs.labels }}
        build-args: VERSION=${{ steps.runner-metadata.outputs.version }}
        cache-from: type=registry,ref=ghcr.io/major0/gh-ecs-runner:latest
        cache-to: type=inline
